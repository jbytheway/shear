namespace shear {

metatype production_s {
  constructor(
      compiletime::NonTerminal s,
      mpl::Sequence<compiletime::TaggedSymbol> produced_with_tags
    ) :
    source(s),
    produced(
      mpl::transform(
        produced_with_tags,
        lambda(compiletime::TaggedSymbol) { _1.get_symbol() },
        compiletime::vector_inserter<compiletime::Symbol>()
      )
    ),
    argument_tags(
      mpl::transform(
        produced_with_tags,
        lambda(compiletime::TaggedSymbol) { _1.get_tag() },
        compiletime::vector_inserter<compiletime::argument_tag>()
      )
    ),
    ;
  compiletime::NonTerminal source;
  mpl::vector<compiletime::Symbol> produced;
  mpl::vector<compiletime::argument_tag> argument_tags;

  compiletime::NonTerminal get_source() { return source; }
}

}

